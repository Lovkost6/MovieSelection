@page "/movie"
@using Microsoft.EntityFrameworkCore
@using global::MovieSelection.Data
@using MovieSelection.Model
@inject IDbContextFactory<ApplicationContext> DbFactory
@inject NavigationManager Navigation
@rendermode InteractiveServer

<h1>Теперь фильмы</h1>
<div class="row">
    <div class="col-sm-6">
    <div class="card">
        <div class="card-body">
            <div class="d-flex">
                <div>
                    <img class="m-1" src="@first.PreviewUrl" width="300" height="500"/>
                </div>
                <div class="ml-3">
                    <h5 class="card-title">@first.Name</h5>
                    <span>@first.Description</span>
                    <h5>Жанры:&nbsp </h5>
                    @foreach (var x in first.Genres)
                    {
                    <h6>@x.Name</h6>
                    }
                </div>
            </div>
            <div class="mt-3">
                <h5>Год:&nbsp @first.Year</h5>
                <h5>Возрастные ограничения:&nbsp @first.AgeRating +</h5>
                <h5>Продолжительность:&nbsp @first.MovieLength@first.SeriesLength мин.</h5>
                <h5>Рейтинг на Кинопоиске:&nbsp @first.RatingKP</h5>
            </div>
            <div class="d-flex justify-content-center mt-3">
                <a @onclick="_ => Selection(second)" class="btn btn-primary">Да!</a>
            </div>
        </div>
    </div>
    </div>
    <div class="col-sm-6">
        <div class="card">
            <div class="card-body">
                <div class="d-flex">
                    <div>
                        <img class="m-1" src="@second.PreviewUrl"width="300" height="500"/>
                    </div>
                    <div class="ml-3">
                        <h5 class="card-title">@second.Name</h5>
                        <span>@second.Description</span>
                        <h5>Жанры:&nbsp </h5>
                        @foreach (var x in second.Genres)
                        {
                            <h6>@x.Name</h6>
                        }
                    </div>
                </div>
                <div class="mt-3">
                    <h5>Год:&nbsp @second.Year</h5>
                    <h5>Возрастные ограничения:&nbsp @second.AgeRating +</h5>
                    <h5>Продолжительность:&nbsp @second.MovieLength @second.SeriesLength мин.</h5>
                    <h5>Рейтинг на Кинопоиске:&nbsp @second.RatingKP</h5>
                </div>
                <div class="d-flex justify-content-center mt-3">
                    <a @onclick="_ => Selection(first)" class="btn btn-primary">Да!</a>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    ApplicationContext dbContext;  

    [SupplyParameterFromQuery(Name = "genre")]
    public string[]? genre { get; set; }

    Random random = new();
    
    Movie second = new();
    Movie first = new();
    
    List<Movie> movies = [];

    protected override void OnInitialized()
    {
        dbContext = DbFactory.CreateDbContext();
        var moviesCount = dbContext.Movies
            .Include(x=>x.Genres)
            .Count(x => x.Genres.Any(x=> x.Id == Convert.ToInt32(genre[0]) || x.Id == Convert.ToInt32(genre[1])));

        var showMovie = new List<Movie>();
        for (int i = 0; i < 5; i++)
        {
            showMovie.AddRange(getRandomMovies(moviesCount));
        }
         

        movies.AddRange(showMovie);

        second = movies[random.Next(0, movies.Count)];
        first = movies[random.Next(0, movies.Count)];
        while (first == second)
        {
            second = movies[random.Next(0, movies.Count)];
        }
    }

    public List<Movie> getRandomMovies(int moviesCount)
    {
        var showMovie = dbContext.Movies
            .Include(x => x.Genres)
            .Where(x => x.Genres.Any(x => x.Id == Convert.ToInt32(genre[0]) || x.Id == Convert.ToInt32(genre[1])))
            .OrderBy(x=>x.Id)
            .Skip(random.Next(0, moviesCount - 10))
            .Take(3)
            .ToList();
        return showMovie;
    }
    
    public void Selection(Model.Movie movie)
    {
        movies.Remove(movie);

        if (movies.Count == 1)
        {
            Navigation.NavigateTo($"movie/{movies.FirstOrDefault().Id}");
            return;
        }
        
        second = movies[random.Next(0, movies.Count)];
        first = movies[random.Next(0, movies.Count)];
        while (first == second)
        {
            second = movies[random.Next(0, movies.Count)];
        }

        
    }


}